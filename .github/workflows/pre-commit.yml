name: Pre-commit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Docker
        uses: docker/setup-buildx-action@v3

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit
        id: pre-commit
        run: |
          pre-commit run --all-files
          echo "terraform_fmt=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "terraform_validate=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "terraform_docs=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "terraform_tflint=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "terraform_trivy=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "terraform_checkov=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "black=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT
          echo "pytest=$([ $? -eq 0 ] && echo 'passed' || echo 'failed')" >> $GITHUB_OUTPUT

      - name: Update README badges
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Create badges section
          echo "| Hook | Status |" > badges.md
          echo "|------|--------|" >> badges.md
          
          # Add each hook status
          for hook in terraform_fmt terraform_validate terraform_docs terraform_tflint terraform_trivy terraform_checkov black pytest; do
            status=$(echo "${{ steps.pre-commit.outputs.$hook }}")
            badge="![$hook](https://img.shields.io/badge/$hook-$status-$(if [ "$status" = "passed" ]; then echo "brightgreen"; else echo "red"; fi))"
            echo "| $hook | $badge |" >> badges.md
          done
          
          # Update README.md
          awk '
            BEGIN { p=1 }
            /^\| Hook \| Status \|/ { p=0 }
            /^# AWS Observability Solutions/ { p=1 }
            p { print }
          ' README.md > README.md.tmp
          
          # Insert badges at the right position
          awk '
            BEGIN { p=1 }
            /^# AWS Observability Solutions/ { 
              print
              while ((getline line < "badges.md") > 0) {
                print line
              }
              print ""
              p=0
            }
            p { print }
          ' README.md.tmp > README.md
          
          # Commit and push changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update pre-commit hook badges" || exit 0
          git push 
